apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingressClassName: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: voting-app-ingress
  namespace: vote-app
spec:
  tls:
  - hosts:
    - result-app.de-marauder.me
    - vote-app.de-marauder.me
    secretName: vote-app-tls
  rules:
  - host: vote-app.de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: vote
            port: 
              number: 80
  - host: result-app.de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: result
            port: 
              number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingressClassName: nginx
    kubernetes.io/ingress.class: "nginx"
  name: sock-shop-ingress
  namespace: sock-shop
spec:
  tls:
  - hosts:
    - sock-shop.de-marauder.me
    secretName: sock-shop-tls
  rules:
  - host: sock-shop.de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: front-end
            port: 
              number: 80
      
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingressClassName: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: prometheus-ingress
  namespace: monitoring
spec:
  tls:
  - hosts:
    - prom.de-marauder.me
    secretName: prometheus-server-tls
  rules:
  - host: prom.de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            # name: prometheus-server
            # name: monitoring-kube-prometheus-prometheus
            name: loki-stack-prometheus-server
            port: 
              number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingressClassName: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: grafana-ingress
  namespace: monitoring
spec:
  tls:
  - hosts:
    - graf.de-marauder.me
    secretName: grafana-server-tls
  rules:
  - host: graf.de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            # name: grafana
            name: loki-stack-grafana
            port: 
              number: 3000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingressClassName: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: portfolio-ingress
  namespace: portfolio
spec:
  tls:
  - hosts:
    - de-marauder.me
    secretName: portfolio-server-tls
  rules:
  - host: de-marauder.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            # name: portfolio
            name: portfolio
            port: 
              number: 80